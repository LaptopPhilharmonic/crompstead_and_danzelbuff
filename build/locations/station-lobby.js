"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = void 0;
const import_manager_js_1 = require("../import-manager.js");
const import_manager_js_2 = require("../import-manager.js");
const import_manager_js_3 = require("../import-manager.js");
const Danzelbuff_js_1 = require("../things/people/Danzelbuff.js");
function init() {
    const lobby = new import_manager_js_1.Location(240, 160, 'places/station-lobby.png', new import_manager_js_2.Grid([
        'XXXXXXXXXXXXXXX',
        'XXXXXXXXXXXXXXX',
        'X---X---XXXXXXX',
        'X---X-----XXXXX',
        'X---X-XXX-----X',
        'XXXXX-----X---X',
        'X-----XXX-X---X',
        'X---------X---X',
        'X-----XXX-----X',
        'XXXXXXXXXXXXXXX',
        'XXXXXXXXXXXXXXX',
    ]));
    [6, 7, 8].forEach((x) => {
        lobby.addGridImage(x, 8, 'objects/chair-blue-u.png');
        lobby.addGridImage(x, 4, 'objects/chair-blue-d.png');
    });
    [5, 6, 7].forEach((y) => {
        lobby.addGridImage(10, y, 'objects/chair-blue-l.png');
    });
    lobby.addGridImage(6, 6, 'objects/station-lobby-table.png');
    lobby.addGridImage(0, 5, 'objects/station-lobby-desk.png');
    lobby.addGridImage(8, 2, 'objects/water-cooler.png');
    lobby.addGridImage(9, 2, 'objects/station-bin.png');
    const crompstead = new import_manager_js_3.Crompstead();
    const danzelbuff = new Danzelbuff_js_1.Danzelbuff();
    crompstead.goesTo(lobby, 2, 7);
    crompstead.acceptingInput = true;
    danzelbuff.goesTo(lobby, 1, 7);
    danzelbuff.follows(crompstead);
    return lobby;
}
exports.init = init;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGlvbi1sb2JieS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xvY2F0aW9ucy9zdGF0aW9uLWxvYmJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDREQUFnRDtBQUNoRCw0REFBNEM7QUFDNUMsNERBQWlFO0FBQ2pFLGtFQUE0RDtBQUU1RCxTQUFnQixJQUFJO0lBQ2hCLE1BQU0sS0FBSyxHQUFHLElBQUksNEJBQVEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLDBCQUEwQixFQUFFLElBQUksd0JBQUksQ0FBQztRQUN0RSxpQkFBaUI7UUFDakIsaUJBQWlCO1FBQ2pCLGlCQUFpQjtRQUNqQixpQkFBaUI7UUFDakIsaUJBQWlCO1FBQ2pCLGlCQUFpQjtRQUNqQixpQkFBaUI7UUFDakIsaUJBQWlCO1FBQ2pCLGlCQUFpQjtRQUNqQixpQkFBaUI7UUFDakIsaUJBQWlCO0tBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBRUosQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1FBQ3BCLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1FBQ3JELEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO0lBQ3pELENBQUMsQ0FBQyxDQUFDO0lBRUgsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1FBQ3BCLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO0lBQzFELENBQUMsQ0FBQyxDQUFDO0lBRUgsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLGlDQUFpQyxDQUFDLENBQUM7SUFDNUQsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLGdDQUFnQyxDQUFDLENBQUM7SUFDM0QsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLDBCQUEwQixDQUFDLENBQUM7SUFDckQsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLHlCQUF5QixDQUFDLENBQUM7SUFFcEQsTUFBTSxVQUFVLEdBQUcsSUFBSSw4QkFBVSxFQUFFLENBQUM7SUFDcEMsTUFBTSxVQUFVLEdBQUcsSUFBSSwwQkFBVSxFQUFFLENBQUM7SUFDcEMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQy9CLFVBQVUsQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO0lBRWpDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvQixVQUFVLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRS9CLE9BQU8sS0FBSyxDQUFDO0FBQ2pCLENBQUM7QUF0Q0Qsb0JBc0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9jYXRpb24gfSBmcm9tICcuLi9pbXBvcnQtbWFuYWdlci5qcyc7XHJcbmltcG9ydCB7IEdyaWQgfSBmcm9tICcuLi9pbXBvcnQtbWFuYWdlci5qcyc7XHJcbmltcG9ydCB7IEFuaW1hdGlvbk5vZGUsIENyb21wc3RlYWQgfSBmcm9tICcuLi9pbXBvcnQtbWFuYWdlci5qcyc7XHJcbmltcG9ydCB7IERhbnplbGJ1ZmYgfSBmcm9tICcuLi90aGluZ3MvcGVvcGxlL0RhbnplbGJ1ZmYuanMnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKTogTG9jYXRpb24geyBcclxuICAgIGNvbnN0IGxvYmJ5ID0gbmV3IExvY2F0aW9uKDI0MCwgMTYwLCAncGxhY2VzL3N0YXRpb24tbG9iYnkucG5nJywgbmV3IEdyaWQoW1xyXG4gICAgICAgICdYWFhYWFhYWFhYWFhYWFgnLFxyXG4gICAgICAgICdYWFhYWFhYWFhYWFhYWFgnLFxyXG4gICAgICAgICdYLS0tWC0tLVhYWFhYWFgnLFxyXG4gICAgICAgICdYLS0tWC0tLS0tWFhYWFgnLFxyXG4gICAgICAgICdYLS0tWC1YWFgtLS0tLVgnLFxyXG4gICAgICAgICdYWFhYWC0tLS0tWC0tLVgnLFxyXG4gICAgICAgICdYLS0tLS1YWFgtWC0tLVgnLFxyXG4gICAgICAgICdYLS0tLS0tLS0tWC0tLVgnLFxyXG4gICAgICAgICdYLS0tLS1YWFgtLS0tLVgnLFxyXG4gICAgICAgICdYWFhYWFhYWFhYWFhYWFgnLFxyXG4gICAgICAgICdYWFhYWFhYWFhYWFhYWFgnLCAgICBcclxuICAgIF0pKTtcclxuXHJcbiAgICBbNiwgNywgOF0uZm9yRWFjaCgoeCkgPT4ge1xyXG4gICAgICAgIGxvYmJ5LmFkZEdyaWRJbWFnZSh4LCA4LCAnb2JqZWN0cy9jaGFpci1ibHVlLXUucG5nJyk7XHJcbiAgICAgICAgbG9iYnkuYWRkR3JpZEltYWdlKHgsIDQsICdvYmplY3RzL2NoYWlyLWJsdWUtZC5wbmcnKTtcclxuICAgIH0pO1xyXG5cclxuICAgIFs1LCA2LCA3XS5mb3JFYWNoKCh5KSA9PiB7XHJcbiAgICAgICAgbG9iYnkuYWRkR3JpZEltYWdlKDEwLCB5LCAnb2JqZWN0cy9jaGFpci1ibHVlLWwucG5nJyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBsb2JieS5hZGRHcmlkSW1hZ2UoNiwgNiwgJ29iamVjdHMvc3RhdGlvbi1sb2JieS10YWJsZS5wbmcnKTtcclxuICAgIGxvYmJ5LmFkZEdyaWRJbWFnZSgwLCA1LCAnb2JqZWN0cy9zdGF0aW9uLWxvYmJ5LWRlc2sucG5nJyk7XHJcbiAgICBsb2JieS5hZGRHcmlkSW1hZ2UoOCwgMiwgJ29iamVjdHMvd2F0ZXItY29vbGVyLnBuZycpO1xyXG4gICAgbG9iYnkuYWRkR3JpZEltYWdlKDksIDIsICdvYmplY3RzL3N0YXRpb24tYmluLnBuZycpO1xyXG5cclxuICAgIGNvbnN0IGNyb21wc3RlYWQgPSBuZXcgQ3JvbXBzdGVhZCgpO1xyXG4gICAgY29uc3QgZGFuemVsYnVmZiA9IG5ldyBEYW56ZWxidWZmKCk7XHJcbiAgICBjcm9tcHN0ZWFkLmdvZXNUbyhsb2JieSwgMiwgNyk7XHJcbiAgICBjcm9tcHN0ZWFkLmFjY2VwdGluZ0lucHV0ID0gdHJ1ZTtcclxuXHJcbiAgICBkYW56ZWxidWZmLmdvZXNUbyhsb2JieSwgMSwgNyk7XHJcbiAgICBkYW56ZWxidWZmLmZvbGxvd3MoY3JvbXBzdGVhZCk7XHJcblxyXG4gICAgcmV0dXJuIGxvYmJ5O1xyXG59Il19